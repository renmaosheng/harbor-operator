package v1alpha2

import (
	corev1 "k8s.io/api/core/v1"
	"sigs.k8s.io/kustomize/kstatus/status"
)

type NodeSelector map[string]string

type ComponentSpec struct {
	// +kubebuilder:validation:Required
	Version Version `json:"version,omitempty"`

	// Number of desired pods. This is a pointer to distinguish between explicit
	// zero and not specified. Defaults to 1.
	// +kubebuilder:validation:Minimum=1
	// +kubebuilder:validation:Required
	Replicas *int32 `json:"replicas,omitempty"`

	// +kubebuilder:validation:Optional
	Priority *int32 `json:"priority,omitempty"`

	// +kubebuilder:validation:Optional
	NodeSelector NodeSelector `json:"nodeSelector,omitempty"`

	// +kubebuilder:validation:Optional
	ImagePullSecrets []corev1.LocalObjectReference `json:"imagePullSecrets,omitempty" patchStrategy:"merge" patchMergeKey:"name"`
}

// https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties
type ComponentStatus struct {
	Result `json:",inline"`

	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
}

type Result struct {
	status.Result `json:",inline"`
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Result) DeepCopyInto(out *Result) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]status.Condition, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentStatus.
func (in *Result) DeepCopy() *Result {
	if in == nil {
		return nil
	}
	out := new(Result)
	in.DeepCopyInto(out)
	return out
}
